<template>
    <div class="page" data-name="wardrobe">
      <!-- Navbar -->
  <div class="navbar">
    <div class="navbar-bg"></div>
    <div class="navbar-inner">
      <div class="left">
        <a href="#" class="link icon-only panel-open" data-panel="left">
          <i class="f7-icons">menu</i>
        </a>
      </div>
      <div class="title" style="display: flex; justify-content: center; align-items: center;">
        <img src="StyleSwipeBigLogo.png" alt="StyleSwipe Logo" class="navbar-logo" style="
          align-items: center;
          width: 50%;
          height: 50%;" />
      </div>
      <div class="searchfilter">
        <a href="#">
          <i class="f7-icons">search</i>
        </a>
      </div>
      <div class="searchfilter">
        <a href="#">
          <i class="f7-icons">sort_down</i>
        </a>
        
      </div>
      <div class="right">
        <a href="#" class="link icon-only panel-open" data-panel="right">
          <i class="f7-icons">person</i>
        </a>
      </div>
    </div>
  </div>
  <!-- Left panel-->
    <div class="panel panel-left panelcover panel-init" id="left-panel">
      <div class="view">
        <div class="page">
          <div class="page-content"> 
            <ul class="list links-list">
            <div class="title"> Preferences</div>
            <li>
              <a href="/styleprofile/">
                <span>Edit Style Profile</span>
              </a>
            </li>
            <li>
              <a href="/profileenvironment/">
                <span>Edit Style Environment</span>
              </a>
            </li>
            </ul>
 	   </div>
          </div>
      </div>
      </div>
  <!-- Right Panel -->
  <div class="panel panel-right panel-reveal" id="right-panel">
    <div class="view">
      <div class="page">
        <div class="page-content">
          <ul class="list links-list">
            <div class="title"> Profile</div>
            <li>
              <a href="#">
                <i class="f7-icons">pencil</i>
                <span>Edit Profile</span>
              </a>
            </li>
            <li>
              <a href="#">
                <i class="f7-icons">gear</i>
                <span>Settings</span>
              </a>
            </li>
            <li>
              <a href="#">
                <i class="f7-icons">question_circle</i>
                <span>Help</span>
              </a>
            </li>
            <li>
              <a href="#">
                <i class="f7-icons">info_circle</i>
                <span>About</span>
              </a>
            </li>
            <li>
              <a href="#">
                <i class="f7-icons">arrow_right_to_line</i>
                <span>Logout</span>
              </a>
            </li>
          </ul>
        </div>
      </div>
    </div>
  </div>

  
      <!-- Content -->
      <div class="page-content modern-content">
        ${state.loading ? $h`
          <div class="loading-container">
            <div class="preloader-ring"></div>
            <p>Loading wardrobe...</p>
          </div>
        ` : $h`
          ${state.error ? $h`
            <div class="error-container">
              <i class="f7-icons">exclamationmark_circle</i>
              <p>${state.error}</p>
            </div>
          ` : $h`
            ${state.wardrobeItems.length > 0 ? $h`
              <div class="wardrobe-grid">
                ${state.wardrobeItems.map((item) => $h`
                  <div class="wardrobe-item" @click="${() => handleItemClick(item)}">
                    <div class="wardrobe-image-card">
                      <img 
                        src="https://slimages.macys.com/is/image/MCY/products/${item.imagery?.images?.[0]?.filePath}" 
                        alt="${item.detail?.name || 'Product Image'}"
                        @error="${handleImageError}"
                        loading="lazy"
                      />
                      <div class="wardrobe-item-overlay">
                        <h4>${item.detail?.name || 'Unknown Product'}</h4>
                        <div class="wardrobe-item-price">
                          ${item.pricing?.price?.tieredPrice?.[0]?.values?.[0]?.formattedValue || 'Price N/A'}
                        </div>
                      </div>
                      <button class="remove-button" @click="${(e) => handleRemoveItem(e, item)}">
                        <i class="f7-icons">trash</i>
                      </button>
                    </div>
                  </div>
                `)}
              </div>
            ` : $h`
              <div class="empty-state">
                <i class="f7-icons">archivebox</i>
                <p>Your wardrobe is empty</p>
                <a href="/explore/" class="modern-button">
                  <i class="f7-icons">compass</i>
                  <span class="tabbar-label" style="margin-left: 20px">Start Exploring</span>
                </a>
              </div>
            `}
          `}
        `}
      </div>
  
      <!-- Toolbar -->
      <div class="toolbar tabbar modern-toolbar toolbar-bottom">
        <div class="toolbar-inner">
          <a href="/wardrobe/" class="tab-link tab-link-active">
            <i class="f7-icons">archivebox</i>
            <span class="tabbar-label" style="margin-left: 4px;">Wardrobe</span>
          </a>
          <a href="/explore/" class="tab-link">
            <i class="f7-icons">compass</i>
            <span class="tabbar-label" style="margin-left: 4px">Explore</span>
          </a>
          <a href="/virtual-tryon/" class="tab-link">
            <i class="f7-icons">sparkles</i>
            <span class="tabbar-label" style="margin-left: 2px">Try On</span>
          </a>
        </div>
      </div>
    </div>
  </template>
  
  <script>
  export default (props, { $f7, $on, $update }) => {
    const state = {
      wardrobeItems: [],
      loading: true,
      error: null
    };
  
    const handleImageError = (event) => {
      event.target.src = '/path/to/fallback-image.jpg';
      event.target.classList.add('image-error');
    };
  
    const handleItemClick = (item) => {
      $f7.dialog.create({
        title: item.detail?.name || 'Product Details',
        text: `
          <div class="product-dialog-content">
            <p>${item.detail?.description || 'No description available'}</p>
            <p class="price">${item.pricing?.price?.tieredPrice?.[0]?.values?.[0]?.formattedValue || 'Price not available'}</p>
          </div>
        `,
        buttons: [
          {
            text: 'Shop at Macy\'s',
            bold: true,
            onClick: () => {
              window.open(item.url, '_blank');
            }
          },
          {
            text: 'Close',
            color: 'gray'
          }
        ]
      }).open();
    };
  
    const handleRemoveItem = (e, item) => {
      e.stopPropagation();
      
      $f7.dialog.confirm(
        'Are you sure you want to remove this item from your wardrobe?',
        'Remove Item',
        async () => {
          try {
            const wardrobe = JSON.parse(localStorage.getItem('wardrobe') || '[]');
            const updatedWardrobe = wardrobe.filter(i => i.id !== item.id);
            localStorage.setItem('wardrobe', JSON.stringify(updatedWardrobe));
            state.wardrobeItems = updatedWardrobe;
            $update();
            
            $f7.toast.create({
              text: 'Item removed from wardrobe',
              position: 'bottom',
              closeTimeout: 2000
            }).open();
          } catch (err) {
            console.error('Error removing item:', err);
            $f7.toast.create({
              text: 'Failed to remove item',
              position: 'bottom',
              closeTimeout: 2000
            }).open();
          }
        }
      );
    };
  
    const loadWardrobeItems = () => {
      try {
        state.loading = true;
        $update();
        
        const wardrobe = JSON.parse(localStorage.getItem('wardrobe') || '[]');
        state.wardrobeItems = wardrobe;
        state.error = null;
      } catch (err) {
        console.error('Error loading wardrobe:', err);
        state.error = 'Failed to load wardrobe items';
      } finally {
        state.loading = false;
        $update();
      }
    };
  
    $on('pageInit', () => {
      loadWardrobeItems();
    });
  
    $on('pageBeforeIn', () => {
      loadWardrobeItems();
    });
  
    return $render;
  };
  </script>
  
  <style>
  /* Modern Wardrobe Grid */

 .loading-container{
  padding: 40px, 15px 15px 20px;  
}
 .wardrobe-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
    gap: calc(var(--spacing-unit) * 2);
    padding: calc(var(--spacing-unit) * 2);
    margin-top: 10%;
    margin-bottom: 5%;
  }
  
  .wardrobe-item {
    position: relative;
    cursor: pointer;
    transition: transform 0.3s ease;
  }
  
  .wardrobe-item:hover {
    transform: translateY(-4px);
  }
  
  .wardrobe-image-card {
    position: relative;
    background: var(--card-background);
    border-radius: var(--border-radius);
    overflow: hidden;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
    aspect-ratio: 3/4;
  }
  
  .wardrobe-image-card img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  .wardrobe-item-overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    padding: calc(var(--spacing-unit) * 2);
    background: linear-gradient(to top, rgba(0,0,0,0.8), transparent);
    color: white;
  }
  
  .wardrobe-item-overlay h4 {
    margin: 0;
    font-size: 14px;
    font-weight: 600;
    margin-bottom: 4px;
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-box-orient: vertical;
  }
  
  .wardrobe-item-price {
    font-size: 12px;
    opacity: 0.9;
  }
  
  .remove-button {
    position: absolute;
    top: 8px;
    right: 8px;
    width: 32px;
    height: 32px;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.9);
    border: none;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    opacity: 1;
    transition: opacity 0.3s ease;
  }
  
  .wardrobe-item:hover .remove-button {
    opacity: 1;
  }
  
  .remove-button .f7-icons {
    color: var(--text-secondary);
    font-size: 16px;
  }
  
  /* Product Dialog Styling */
  .product-dialog-content {
    padding: calc(var(--spacing-unit) * 2);
  }
  
  .product-dialog-content .price {
    font-weight: 600;
    color: var(--primary-color);
    margin-top: calc(var(--spacing-unit) * 2);
  }
  
  /* Empty State */
  .empty-state {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 60vh;
    text-align: center;
    gap: calc(var(--spacing-unit) * 3);
  }
  
  .empty-state .f7-icons {
    font-size: 48px;
    color: var(--text-secondary);
  }
  .searchfilter{
  font-size: 30px;
  flex:1;
  margin: auto;
  display: flex;
  justify-content: space-between;
  }
  
  .empty-state p {
    color: var(--text-secondary);
    margin: 0;
  }
  
  /* Responsive Design */
  @media (max-width: 480px) {
    .wardrobe-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  
  @media (min-width: 768px) {
    .wardrobe-grid {
      grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
      max-width: 1200px;
      margin: 0 auto;
    }
  }
  </style>